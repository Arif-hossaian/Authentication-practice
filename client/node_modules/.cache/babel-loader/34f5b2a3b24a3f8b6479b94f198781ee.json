{"ast":null,"code":"var _jsxFileName = \"E:\\\\mern-auth\\\\client\\\\src\\\\components\\\\body\\\\auth\\\\ResetPassword.jsx\",\n    _s = $RefreshSig$();\n\nimport { Card, CardContent, Grow, TextField, Button } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport classes from \"./auth.module.css\";\nimport { showErrMsg, showSuccessMsg } from \"../../utils/notification/Notification.js\";\nimport { isLength, isMatch } from \"../../utils/validation/Validation.js\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  password: \"\",\n  cf_password: \"\",\n  err: \"\",\n  success: \"\"\n};\n\nconst ResetPassword = () => {\n  _s();\n\n  const [data, setData] = useState(initialState);\n  const {\n    token\n  } = useParams();\n  const {\n    password,\n    cf_password,\n    err,\n    success\n  } = data;\n\n  const handleChangeInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setData({ ...data,\n      [name]: value,\n      err: \"\",\n      success: \"\"\n    });\n  };\n\n  const handleResetPass = async () => {\n    if (isLength(password)) return setData({ ...data,\n      err: \"Password must be at least 6 characters.\",\n      success: \"\"\n    });\n    if (!isMatch(password, cf_password)) return setData({ ...data,\n      err: \"Password did not match.\",\n      success: \"\"\n    });\n\n    try {\n      const res = await axios.post(\"/user/reset\", {\n        password\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      return setData({ ...data,\n        err: \"\",\n        success: res.data.msg\n      });\n    } catch (err) {\n      err.response.data.msg && setData({ ...data,\n        err: err.response.data.msg,\n        success: \"\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.login_page,\n    children: /*#__PURE__*/_jsxDEV(Grow, {\n      in: true,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"Reset Your Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [err && showErrMsg(err), success && showSuccessMsg(success)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: \"13px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              type: \"password\",\n              label: \"Enter new password\",\n              fullWidth: true,\n              name: \"password\",\n              value: password,\n              variant: \"outlined\",\n              onChange: handleChangeInput,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: \"20px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              type: \"password\",\n              label: \"Enter confirm password\",\n              name: \"cf_password\",\n              value: cf_password,\n              onChange: handleChangeInput,\n              fullWidth: true,\n              variant: \"outlined\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.row,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"primary\",\n              type: \"submit\",\n              style: {\n                marginTop: \"14px\"\n              },\n              size: \"large\",\n              onClick: handleResetPass,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResetPassword, \"WMFUP8fu4tNDOjnO3J2gBGUFOaw=\", false, function () {\n  return [useParams];\n});\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["E:/mern-auth/client/src/components/body/auth/ResetPassword.jsx"],"names":["Card","CardContent","Grow","TextField","Button","React","useState","useParams","classes","showErrMsg","showSuccessMsg","isLength","isMatch","axios","initialState","password","cf_password","err","success","ResetPassword","data","setData","token","handleChangeInput","e","name","value","target","handleResetPass","res","post","headers","Authorization","msg","response","login_page","textAlign","marginTop","row"],"mappings":"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","sourcesContent":["import { Card, CardContent, Grow, TextField, Button } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport classes from \"./auth.module.css\";\r\nimport {\r\n  showErrMsg,\r\n  showSuccessMsg,\r\n} from \"../../utils/notification/Notification.js\";\r\nimport { isLength, isMatch } from \"../../utils/validation/Validation.js\";\r\nimport axios from \"axios\";\r\n\r\nconst initialState = {\r\n  password: \"\",\r\n  cf_password: \"\",\r\n  err: \"\",\r\n  success: \"\",\r\n};\r\nconst ResetPassword = () => {\r\n  const [data, setData] = useState(initialState);\r\n  const { token } = useParams();\r\n\r\n  const { password, cf_password, err, success } = data;\r\n\r\n  const handleChangeInput = (e) => {\r\n    const { name, value } = e.target;\r\n    setData({ ...data, [name]: value, err: \"\", success: \"\" });\r\n  };\r\n\r\n  const handleResetPass = async () => {\r\n    if (isLength(password))\r\n      return setData({\r\n        ...data,\r\n        err: \"Password must be at least 6 characters.\",\r\n        success: \"\",\r\n      });\r\n\r\n    if (!isMatch(password, cf_password))\r\n      return setData({ ...data, err: \"Password did not match.\", success: \"\" });\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        \"/user/reset\",\r\n        { password },\r\n        {\r\n          headers: { Authorization: token },\r\n        }\r\n      );\r\n\r\n      return setData({ ...data, err: \"\", success: res.data.msg });\r\n    } catch (err) {\r\n      err.response.data.msg &&\r\n        setData({ ...data, err: err.response.data.msg, success: \"\" });\r\n    }\r\n  };\r\n  return (\r\n    <div className={classes.login_page}>\r\n      <Grow in>\r\n        <Card>\r\n          <CardContent>\r\n            <h2 style={{ textAlign: \"center\" }}>Reset Your Password</h2>\r\n            <div>\r\n              {err && showErrMsg(err)}\r\n              {success && showSuccessMsg(success)}\r\n            </div>\r\n            <div style={{ marginTop: \"13px\" }}>\r\n              <TextField\r\n                type=\"password\"\r\n                label=\"Enter new password\"\r\n                fullWidth\r\n                name=\"password\"\r\n                value={password}\r\n                variant=\"outlined\"\r\n                onChange={handleChangeInput}\r\n                required\r\n              />\r\n            </div>\r\n            <div style={{ marginTop: \"20px\" }}>\r\n              <TextField\r\n                type=\"password\"\r\n                label=\"Enter confirm password\"\r\n                name=\"cf_password\"\r\n                value={cf_password}\r\n                onChange={handleChangeInput}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className={classes.row}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                style={{ marginTop: \"14px\" }}\r\n                size=\"large\"\r\n                onClick={handleResetPass}\r\n              >\r\n                Login\r\n              </Button>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </Grow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"]},"metadata":{},"sourceType":"module"}