{"ast":null,"code":"var _jsxFileName = \"E:\\\\mern-auth\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { dispatchLogin, fetchUser, dispatchGetUser } from \"./redux/actions/authAction\";\nimport Header from \"./components/Header/Header.jsx\";\nimport Body from \"./components/body/Body.jsx\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const token = useSelector(state => state.token);\n  const auth = useSelector(state => state.auth);\n  useEffect(() => {\n    const firstLogin = localStorage.getItem(\"firstLogin\");\n\n    if (firstLogin) {\n      const getToken = async () => {\n        const res = await axios.post(\"/user/refresh_token\", null);\n        dispatch({\n          type: \"GET_TOKEN\",\n          payload: res.data.access_token\n        });\n      };\n\n      getToken();\n    }\n  }, [auth.isLogged, dispatch]);\n  useEffect(() => {\n    if (token) {\n      const getuser = () => {\n        dispatch(dispatchLogin());\n        return fetchUser(token).then(res => {\n          dispatch(dispatchGetUser(res));\n        });\n      };\n\n      getuser();\n    }\n  }, [token, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Body, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"ktawS+ubDSYtBWRpfP+berKS1yM=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/mern-auth/client/src/App.js"],"names":["React","useEffect","BrowserRouter","Router","useDispatch","useSelector","dispatchLogin","fetchUser","dispatchGetUser","Header","Body","axios","App","dispatch","token","state","auth","firstLogin","localStorage","getItem","getToken","res","post","type","payload","data","access_token","isLogged","getuser","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,aADF,EAEEC,SAFF,EAGEC,eAHF,QAIO,4BAJP;AAKA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,KAAK,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACD,KAAlB,CAAzB;AACA,QAAME,IAAI,GAAGX,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAxB;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAnB;;AACA,QAAIF,UAAJ,EAAgB;AACd,YAAMG,QAAQ,GAAG,YAAY;AAC3B,cAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAW,qBAAX,EAAkC,IAAlC,CAAlB;AACAT,QAAAA,QAAQ,CAAC;AAAEU,UAAAA,IAAI,EAAE,WAAR;AAAqBC,UAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASC;AAAvC,SAAD,CAAR;AACD,OAHD;;AAIAN,MAAAA,QAAQ;AACT;AACF,GATQ,EASN,CAACJ,IAAI,CAACW,QAAN,EAAgBd,QAAhB,CATM,CAAT;AAWAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,KAAJ,EAAW;AACT,YAAMc,OAAO,GAAG,MAAM;AACpBf,QAAAA,QAAQ,CAACP,aAAa,EAAd,CAAR;AACA,eAAOC,SAAS,CAACO,KAAD,CAAT,CAAiBe,IAAjB,CAAuBR,GAAD,IAAS;AACpCR,UAAAA,QAAQ,CAACL,eAAe,CAACa,GAAD,CAAhB,CAAR;AACD,SAFM,CAAP;AAGD,OALD;;AAMAO,MAAAA,OAAO;AACR;AACF,GAVQ,EAUN,CAACd,KAAD,EAAQD,QAAR,CAVM,CAAT;AAWA,sBACE;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAQD,CAnCD;;GAAMD,G;UACaR,W,EACHC,W,EACDA,W;;;KAHTO,G;AAqCN,eAAeA,GAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  dispatchLogin,\n  fetchUser,\n  dispatchGetUser,\n} from \"./redux/actions/authAction\";\nimport Header from \"./components/Header/Header.jsx\";\nimport Body from \"./components/body/Body.jsx\";\nimport axios from \"axios\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const token = useSelector((state) => state.token);\n  const auth = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    const firstLogin = localStorage.getItem(\"firstLogin\");\n    if (firstLogin) {\n      const getToken = async () => {\n        const res = await axios.post(\"/user/refresh_token\", null);\n        dispatch({ type: \"GET_TOKEN\", payload: res.data.access_token });\n      };\n      getToken();\n    }\n  }, [auth.isLogged, dispatch]);\n\n  useEffect(() => {\n    if (token) {\n      const getuser = () => {\n        dispatch(dispatchLogin());\n        return fetchUser(token).then((res) => {\n          dispatch(dispatchGetUser(res));\n        });\n      };\n      getuser();\n    }\n  }, [token, dispatch]);\n  return (\n    <>\n      <Router>\n        <Header />\n        <Body />\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}